#!/bin/ash

set -e

main() {

    if mount -t fuse.osxfs | grep /var/www > /dev/null; then
        chown -R nginx:www-data /app 2> /dev/null
        return
    fi

    local owner group owner_id group_id tmp
    
    owner=$(stat -c '%U' /var/www)
    group=$(stat -c '%G' /var/www)

	if [[ $owner = root ]]; then
		owner=nginx
	fi
	if [[ $group = root ]]; then
		group=www-data
	fi
	
    if [[ $owner = UNKNOWN ]]; then
		owner_id=$(stat -c '%u' /var/www)
        owner=$(randname)
        if [[ $group = UNKNOWN ]]; then
            group=$owner
			group_id=$(id -g $owner)
            addgroup -S -g "$group_id" "$group"
        fi
        adduser -S -u $owner_id -G $group_id "$owner"
        echo "$owner:$owner" | chpasswd
    fi

    # configure nginx
    tmp=/tmp/$RANDOM
    {
        echo "user $owner $group;"
        tail -n +2 /etc/nginx/nginx.conf
    } >> "$tmp" &&
    cat "$tmp" > /etc/nginx/nginx.conf && rm "$tmp"

    # configure php-fpm
    tmp=/tmp/$RANDOM
    {
        echo "[www]"
        echo "user = $owner"
        echo "group = $group"
        echo "listen.owner = $owner"
        echo "listen.group = $group"
        tail -n +6 /etc/php5/pool.d/www.conf
    } >> "$tmp" &&
    cat "$tmp" > /etc/php5/pool.d/www.conf && rm "$tmp"
    
    chown $owner:$group -R /var/lib/nginx
}

##
# Generate a random sixteen-character
# string of alphabetical characters
randname() {
    tr -dc '[:lower:]' < /dev/urandom | dd count=1 bs=16 2>/dev/null
}

main